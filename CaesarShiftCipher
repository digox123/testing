package tudelft.caesarshift;

public class CaesarShiftCipher {

    public String caesarShiftCipher(String message, int shift) {
        StringBuilder sb = new StringBuilder();
        shift = shift % 26; // Asegura que el shift esté dentro de los 26 caracteres del alfabeto

        for (char currentChar : message.toCharArray()) {
            if (currentChar == ' ') { 
                sb.append(currentChar); // Mantiene los espacios sin cambios
                continue;
            }
            if (currentChar < 'a' || currentChar > 'z') {
                return "invalid"; // Si hay un carácter no permitido, retorna "invalid"
            }

            char shiftedChar = (char) (currentChar + shift);

            if (shiftedChar > 'z') {
                shiftedChar = (char) (shiftedChar - 26);
            } else if (shiftedChar < 'a') {
                shiftedChar = (char) (shiftedChar + 26);
            }

            sb.append(shiftedChar);
        }

        return sb.toString();
    }
}
